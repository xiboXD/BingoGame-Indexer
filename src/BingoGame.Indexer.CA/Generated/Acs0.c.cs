// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: acs0.proto
// </auto-generated>
// Original file comments:
// *
// AElf Standards ACS0(Contract Deployment Standard)
//
// Used to manage the deployment and update of contracts.
#pragma warning disable 0414, 1591
#region Designer generated code

using System.Collections.Generic;
using aelf = global::AElf.CSharp.Core;

namespace AElf.Standards.ACS0 {

  #region Events
  public partial class ContractProposed : aelf::IEvent<ContractProposed>
  {
    public global::System.Collections.Generic.IEnumerable<ContractProposed> GetIndexed()
    {
      return new List<ContractProposed>
      {
      };
    }

    public ContractProposed GetNonIndexed()
    {
      return new ContractProposed
      {
        ProposedContractInputHash = ProposedContractInputHash,
      };
    }
  }

  public partial class ContractDeployed : aelf::IEvent<ContractDeployed>
  {
    public global::System.Collections.Generic.IEnumerable<ContractDeployed> GetIndexed()
    {
      return new List<ContractDeployed>
      {
      new ContractDeployed
      {
        Author = Author
      },
      new ContractDeployed
      {
        CodeHash = CodeHash
      },
      };
    }

    public ContractDeployed GetNonIndexed()
    {
      return new ContractDeployed
      {
        Address = Address,
        Version = Version,
        Name = Name,
      };
    }
  }

  public partial class CodeCheckRequired : aelf::IEvent<CodeCheckRequired>
  {
    public global::System.Collections.Generic.IEnumerable<CodeCheckRequired> GetIndexed()
    {
      return new List<CodeCheckRequired>
      {
      };
    }

    public CodeCheckRequired GetNonIndexed()
    {
      return new CodeCheckRequired
      {
        Code = Code,
        ProposedContractInputHash = ProposedContractInputHash,
        Category = Category,
        IsSystemContract = IsSystemContract,
      };
    }
  }

  public partial class CodeUpdated : aelf::IEvent<CodeUpdated>
  {
    public global::System.Collections.Generic.IEnumerable<CodeUpdated> GetIndexed()
    {
      return new List<CodeUpdated>
      {
      new CodeUpdated
      {
        Address = Address
      },
      };
    }

    public CodeUpdated GetNonIndexed()
    {
      return new CodeUpdated
      {
        OldCodeHash = OldCodeHash,
        NewCodeHash = NewCodeHash,
        Version = Version,
      };
    }
  }

  #endregion
}
#endregion

