// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bingo_game_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Portkey.Contracts.BingoGameContract {

  /// <summary>Holder for reflection information generated from bingo_game_contract.proto</summary>
  public static partial class BingoGameContractReflection {

    #region Descriptor
    /// <summary>File descriptor for bingo_game_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BingoGameContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChliaW5nb19nYW1lX2NvbnRyYWN0LnByb3RvGg9hZWxmL2NvcmUucHJvdG8a",
            "EmFlbGYvb3B0aW9ucy5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnBy",
            "b3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8aC2FjczEyLnByb3RvIj0KEkdldFJh",
            "bmRvbUhhc2hJbnB1dBIYCgRzZWVkGAEgASgLMgouYWVsZi5IYXNoEg0KBXRp",
            "bWVzGAIgASgDIjwKE0dldFJhbmRvbUhhc2hPdXRwdXQSJQoOcmFuZG9tX3Jl",
            "c3VsdHMYASADKAsyDS5SYW5kb21SZXN1bHQiPwoMUmFuZG9tUmVzdWx0Eh8K",
            "C3JhbmRvbV9oYXNoGAEgASgLMgouYWVsZi5IYXNoEg4KBmhlaWdodBgCIAEo",
            "AyI1CglQbGF5SW5wdXQSDgoGYW1vdW50GAEgASgDEhgKBHR5cGUYAiABKA4y",
            "Ci5CaW5nb1R5cGUiNgoXR2V0Qm91dEluZm9ybWF0aW9uSW5wdXQSGwoHcGxh",
            "eV9pZBgBIAEoCzIKLmFlbGYuSGFzaCKBAQoRUGxheWVySW5mb3JtYXRpb24S",
            "GAoEc2VlZBgBIAEoCzIKLmFlbGYuSGFzaBIfCgVib3V0cxgCIAMoCzIQLkJv",
            "dXRJbmZvcm1hdGlvbhIxCg1yZWdpc3Rlcl90aW1lGAMgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcCIZCghEaWNlTGlzdBINCgVkaWNlcxgBIAMo",
            "BSLQAgoPQm91dEluZm9ybWF0aW9uEhkKEXBsYXlfYmxvY2tfaGVpZ2h0GAEg",
            "ASgDEg4KBmFtb3VudBgCIAEoAxINCgVhd2FyZBgDIAEoAxITCgtpc19jb21w",
            "bGV0ZRgEIAEoCBIbCgdwbGF5X2lkGAUgASgLMgouYWVsZi5IYXNoEhoKEmJp",
            "bmdvX2Jsb2NrX2hlaWdodBgGIAEoAxIYCgR0eXBlGAcgASgOMgouQmluZ29U",
            "eXBlEhUKDXJhbmRvbV9udW1iZXIYCCABKAUSFAoMcm91bmRfbnVtYmVyGAkg",
            "ASgDEi0KCXBsYXlfdGltZRgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASGAoFZGljZXMYCyABKAsyCS5EaWNlTGlzdBIlCg5wbGF5ZXJfYWRk",
            "cmVzcxgMIAEoCzINLmFlbGYuQWRkcmVzcyI3Cg1MaW1pdFNldHRpbmdzEhIK",
            "Cm1pbl9hbW91bnQYASABKAMSEgoKbWF4X2Ftb3VudBgCIAEoAyLRAQoGUGxh",
            "eWVkEiAKEXBsYXlfYmxvY2tfaGVpZ2h0GAEgASgDQgWIj/UBARIVCgZhbW91",
            "bnQYAiABKANCBYiP9QEBEh8KBHR5cGUYAyABKA4yCi5CaW5nb1R5cGVCBYiP",
            "9QEBEiIKB3BsYXlfaWQYBCABKAsyCi5hZWxmLkhhc2hCBYiP9QEBEiwKDnBs",
            "YXllcl9hZGRyZXNzGAUgASgLMg0uYWVsZi5BZGRyZXNzQgWIj/UBARIVCgZz",
            "eW1ib2wYBiABKAlCBYiP9QEBOgSguxgBIs8CCgdCaW5nb2VkEiAKEXBsYXlf",
            "YmxvY2tfaGVpZ2h0GAEgASgDQgWIj/UBARIVCgZhbW91bnQYAiABKANCBYiP",
            "9QEBEhQKBWF3YXJkGAMgASgDQgWIj/UBARIaCgtpc19jb21wbGV0ZRgEIAEo",
            "CEIFiI/1AQESIgoHcGxheV9pZBgFIAEoCzIKLmFlbGYuSGFzaEIFiI/1AQES",
            "IQoSYmluZ29fYmxvY2tfaGVpZ2h0GAYgASgDQgWIj/UBARIfCgR0eXBlGAcg",
            "ASgOMgouQmluZ29UeXBlQgWIj/UBARIcCg1yYW5kb21fbnVtYmVyGAggASgF",
            "QgWIj/UBARIfCgVkaWNlcxgJIAEoCzIJLkRpY2VMaXN0QgWIj/UBARIsCg5w",
            "bGF5ZXJfYWRkcmVzcxgKIAEoCzINLmFlbGYuQWRkcmVzc0IFiI/1AQE6BKC7",
            "GAEimwEKClJlZ2lzdGVyZWQSHwoEc2VlZBgBIAEoCzIKLmFlbGYuSGFzaEIF",
            "iI/1AQESOAoNcmVnaXN0ZXJfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXBCBYiP9QEBEiwKDnBsYXllcl9hZGRyZXNzGAMgASgLMg0u",
            "YWVsZi5BZGRyZXNzQgWIj/UBAToEoLsYASohCglCaW5nb1R5cGUSCQoFU21h",
            "bGwQABIJCgVMYXJnZRABMtAGChFCaW5nb0dhbWVDb250cmFjdBI8CghSZWdp",
            "c3RlchIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eSIAEjEKBFBsYXkSCi5QbGF5SW5wdXQaGy5nb29nbGUucHJvdG9i",
            "dWYuSW50NjRWYWx1ZSIAEjEKBUJpbmdvEgouYWVsZi5IYXNoGhouZ29vZ2xl",
            "LnByb3RvYnVmLkJvb2xWYWx1ZSIAEjgKBFF1aXQSFi5nb29nbGUucHJvdG9i",
            "dWYuRW1wdHkaFi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI8ChBTZXRMaW1p",
            "dFNldHRpbmdzEg4uTGltaXRTZXR0aW5ncxoWLmdvb2dsZS5wcm90b2J1Zi5F",
            "bXB0eSIAEj4KCkluaXRpYWxpemUSFi5nb29nbGUucHJvdG9idWYuRW1wdHka",
            "Fi5nb29nbGUucHJvdG9idWYuRW1wdHkiABI6CghHZXRBd2FyZBIKLmFlbGYu",
            "SGFzaBobLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlIgWIifcBARJAChRH",
            "ZXRQbGF5ZXJJbmZvcm1hdGlvbhINLmFlbGYuQWRkcmVzcxoSLlBsYXllcklu",
            "Zm9ybWF0aW9uIgWIifcBARJBChBHZXRMaW1pdFNldHRpbmdzEhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5Gg4uTGltaXRTZXR0aW5ncyIFiIn3AQESQQoPR2V0",
            "UmFuZG9tTnVtYmVyEgouYWVsZi5IYXNoGhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDMyVmFsdWUiBYiJ9wEBEkcKEkdldEJvdXRJbmZvcm1hdGlvbhIYLkdldEJv",
            "dXRJbmZvcm1hdGlvbklucHV0GhAuQm91dEluZm9ybWF0aW9uIgWIifcBARJB",
            "Cg1HZXRSYW5kb21IYXNoEhMuR2V0UmFuZG9tSGFzaElucHV0GhQuR2V0UmFu",
            "ZG9tSGFzaE91dHB1dCIFiIn3AQEaT7LM9gE6UG9ydGtleS5Db250cmFjdHMu",
            "QmluZ29HYW1lQ29udHJhY3QuQmluZ29HYW1lQ29udHJhY3RTdGF0ZcrK9gEL",
            "YWNzMTIucHJvdG9CJqoCI1BvcnRrZXkuQ29udHJhY3RzLkJpbmdvR2FtZUNv",
            "bnRyYWN0YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AElf.Types.CoreReflection.Descriptor, global::AElf.OptionsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::AElf.Standards.ACS12.Acs12Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Portkey.Contracts.BingoGameContract.BingoType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.GetRandomHashInput), global::Portkey.Contracts.BingoGameContract.GetRandomHashInput.Parser, new[]{ "Seed", "Times" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.GetRandomHashOutput), global::Portkey.Contracts.BingoGameContract.GetRandomHashOutput.Parser, new[]{ "RandomResults" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.RandomResult), global::Portkey.Contracts.BingoGameContract.RandomResult.Parser, new[]{ "RandomHash", "Height" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.PlayInput), global::Portkey.Contracts.BingoGameContract.PlayInput.Parser, new[]{ "Amount", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.GetBoutInformationInput), global::Portkey.Contracts.BingoGameContract.GetBoutInformationInput.Parser, new[]{ "PlayId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.PlayerInformation), global::Portkey.Contracts.BingoGameContract.PlayerInformation.Parser, new[]{ "Seed", "Bouts", "RegisterTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.DiceList), global::Portkey.Contracts.BingoGameContract.DiceList.Parser, new[]{ "Dices" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.BoutInformation), global::Portkey.Contracts.BingoGameContract.BoutInformation.Parser, new[]{ "PlayBlockHeight", "Amount", "Award", "IsComplete", "PlayId", "BingoBlockHeight", "Type", "RandomNumber", "RoundNumber", "PlayTime", "Dices", "PlayerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.LimitSettings), global::Portkey.Contracts.BingoGameContract.LimitSettings.Parser, new[]{ "MinAmount", "MaxAmount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.Played), global::Portkey.Contracts.BingoGameContract.Played.Parser, new[]{ "PlayBlockHeight", "Amount", "Type", "PlayId", "PlayerAddress", "Symbol" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.Bingoed), global::Portkey.Contracts.BingoGameContract.Bingoed.Parser, new[]{ "PlayBlockHeight", "Amount", "Award", "IsComplete", "PlayId", "BingoBlockHeight", "Type", "RandomNumber", "Dices", "PlayerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Portkey.Contracts.BingoGameContract.Registered), global::Portkey.Contracts.BingoGameContract.Registered.Parser, new[]{ "Seed", "RegisterTime", "PlayerAddress" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BingoType {
    [pbr::OriginalName("Small")] Small = 0,
    [pbr::OriginalName("Large")] Large = 1,
  }

  #endregion

  #region Messages
  public sealed partial class GetRandomHashInput : pb::IMessage<GetRandomHashInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRandomHashInput> _parser = new pb::MessageParser<GetRandomHashInput>(() => new GetRandomHashInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetRandomHashInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRandomHashInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRandomHashInput(GetRandomHashInput other) : this() {
      seed_ = other.seed_ != null ? other.seed_.Clone() : null;
      times_ = other.times_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRandomHashInput Clone() {
      return new GetRandomHashInput(this);
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 1;
    private global::AElf.Types.Hash seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "times" field.</summary>
    public const int TimesFieldNumber = 2;
    private long times_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Times {
      get { return times_; }
      set {
        times_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetRandomHashInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetRandomHashInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Seed, other.Seed)) return false;
      if (Times != other.Times) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (seed_ != null) hash ^= Seed.GetHashCode();
      if (Times != 0L) hash ^= Times.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (seed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Seed);
      }
      if (Times != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Times);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (seed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Seed);
      }
      if (Times != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Times);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (seed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Seed);
      }
      if (Times != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Times);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetRandomHashInput other) {
      if (other == null) {
        return;
      }
      if (other.seed_ != null) {
        if (seed_ == null) {
          Seed = new global::AElf.Types.Hash();
        }
        Seed.MergeFrom(other.Seed);
      }
      if (other.Times != 0L) {
        Times = other.Times;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (seed_ == null) {
              Seed = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Seed);
            break;
          }
          case 16: {
            Times = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (seed_ == null) {
              Seed = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Seed);
            break;
          }
          case 16: {
            Times = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRandomHashOutput : pb::IMessage<GetRandomHashOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRandomHashOutput> _parser = new pb::MessageParser<GetRandomHashOutput>(() => new GetRandomHashOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetRandomHashOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRandomHashOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRandomHashOutput(GetRandomHashOutput other) : this() {
      randomResults_ = other.randomResults_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetRandomHashOutput Clone() {
      return new GetRandomHashOutput(this);
    }

    /// <summary>Field number for the "random_results" field.</summary>
    public const int RandomResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Portkey.Contracts.BingoGameContract.RandomResult> _repeated_randomResults_codec
        = pb::FieldCodec.ForMessage(10, global::Portkey.Contracts.BingoGameContract.RandomResult.Parser);
    private readonly pbc::RepeatedField<global::Portkey.Contracts.BingoGameContract.RandomResult> randomResults_ = new pbc::RepeatedField<global::Portkey.Contracts.BingoGameContract.RandomResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Portkey.Contracts.BingoGameContract.RandomResult> RandomResults {
      get { return randomResults_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetRandomHashOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetRandomHashOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!randomResults_.Equals(other.randomResults_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= randomResults_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      randomResults_.WriteTo(output, _repeated_randomResults_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      randomResults_.WriteTo(ref output, _repeated_randomResults_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += randomResults_.CalculateSize(_repeated_randomResults_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetRandomHashOutput other) {
      if (other == null) {
        return;
      }
      randomResults_.Add(other.randomResults_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            randomResults_.AddEntriesFrom(input, _repeated_randomResults_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            randomResults_.AddEntriesFrom(ref input, _repeated_randomResults_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RandomResult : pb::IMessage<RandomResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RandomResult> _parser = new pb::MessageParser<RandomResult>(() => new RandomResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RandomResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandomResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandomResult(RandomResult other) : this() {
      randomHash_ = other.randomHash_ != null ? other.randomHash_.Clone() : null;
      height_ = other.height_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RandomResult Clone() {
      return new RandomResult(this);
    }

    /// <summary>Field number for the "random_hash" field.</summary>
    public const int RandomHashFieldNumber = 1;
    private global::AElf.Types.Hash randomHash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash RandomHash {
      get { return randomHash_; }
      set {
        randomHash_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private long height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RandomResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RandomResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RandomHash, other.RandomHash)) return false;
      if (Height != other.Height) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (randomHash_ != null) hash ^= RandomHash.GetHashCode();
      if (Height != 0L) hash ^= Height.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (randomHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RandomHash);
      }
      if (Height != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (randomHash_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RandomHash);
      }
      if (Height != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (randomHash_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RandomHash);
      }
      if (Height != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RandomResult other) {
      if (other == null) {
        return;
      }
      if (other.randomHash_ != null) {
        if (randomHash_ == null) {
          RandomHash = new global::AElf.Types.Hash();
        }
        RandomHash.MergeFrom(other.RandomHash);
      }
      if (other.Height != 0L) {
        Height = other.Height;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (randomHash_ == null) {
              RandomHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(RandomHash);
            break;
          }
          case 16: {
            Height = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (randomHash_ == null) {
              RandomHash = new global::AElf.Types.Hash();
            }
            input.ReadMessage(RandomHash);
            break;
          }
          case 16: {
            Height = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayInput : pb::IMessage<PlayInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayInput> _parser = new pb::MessageParser<PlayInput>(() => new PlayInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayInput(PlayInput other) : this() {
      amount_ = other.amount_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayInput Clone() {
      return new PlayInput(this);
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Portkey.Contracts.BingoGameContract.BingoType type_ = global::Portkey.Contracts.BingoGameContract.BingoType.Small;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Portkey.Contracts.BingoGameContract.BingoType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Amount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Amount);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Amount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Amount);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayInput other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadInt64();
            break;
          }
          case 16: {
            Type = (global::Portkey.Contracts.BingoGameContract.BingoType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Amount = input.ReadInt64();
            break;
          }
          case 16: {
            Type = (global::Portkey.Contracts.BingoGameContract.BingoType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBoutInformationInput : pb::IMessage<GetBoutInformationInput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBoutInformationInput> _parser = new pb::MessageParser<GetBoutInformationInput>(() => new GetBoutInformationInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetBoutInformationInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBoutInformationInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBoutInformationInput(GetBoutInformationInput other) : this() {
      playId_ = other.playId_ != null ? other.playId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetBoutInformationInput Clone() {
      return new GetBoutInformationInput(this);
    }

    /// <summary>Field number for the "play_id" field.</summary>
    public const int PlayIdFieldNumber = 1;
    private global::AElf.Types.Hash playId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PlayId {
      get { return playId_; }
      set {
        playId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetBoutInformationInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetBoutInformationInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayId, other.PlayId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (playId_ != null) hash ^= PlayId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (playId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (playId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (playId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetBoutInformationInput other) {
      if (other == null) {
        return;
      }
      if (other.playId_ != null) {
        if (playId_ == null) {
          PlayId = new global::AElf.Types.Hash();
        }
        PlayId.MergeFrom(other.PlayId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playId_ == null) {
              PlayId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PlayId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (playId_ == null) {
              PlayId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PlayId);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PlayerInformation : pb::IMessage<PlayerInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerInformation> _parser = new pb::MessageParser<PlayerInformation>(() => new PlayerInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInformation(PlayerInformation other) : this() {
      seed_ = other.seed_ != null ? other.seed_.Clone() : null;
      bouts_ = other.bouts_.Clone();
      registerTime_ = other.registerTime_ != null ? other.registerTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerInformation Clone() {
      return new PlayerInformation(this);
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 1;
    private global::AElf.Types.Hash seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "bouts" field.</summary>
    public const int BoutsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Portkey.Contracts.BingoGameContract.BoutInformation> _repeated_bouts_codec
        = pb::FieldCodec.ForMessage(18, global::Portkey.Contracts.BingoGameContract.BoutInformation.Parser);
    private readonly pbc::RepeatedField<global::Portkey.Contracts.BingoGameContract.BoutInformation> bouts_ = new pbc::RepeatedField<global::Portkey.Contracts.BingoGameContract.BoutInformation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Portkey.Contracts.BingoGameContract.BoutInformation> Bouts {
      get { return bouts_; }
    }

    /// <summary>Field number for the "register_time" field.</summary>
    public const int RegisterTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp registerTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RegisterTime {
      get { return registerTime_; }
      set {
        registerTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Seed, other.Seed)) return false;
      if(!bouts_.Equals(other.bouts_)) return false;
      if (!object.Equals(RegisterTime, other.RegisterTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (seed_ != null) hash ^= Seed.GetHashCode();
      hash ^= bouts_.GetHashCode();
      if (registerTime_ != null) hash ^= RegisterTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (seed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Seed);
      }
      bouts_.WriteTo(output, _repeated_bouts_codec);
      if (registerTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegisterTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (seed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Seed);
      }
      bouts_.WriteTo(ref output, _repeated_bouts_codec);
      if (registerTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegisterTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (seed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Seed);
      }
      size += bouts_.CalculateSize(_repeated_bouts_codec);
      if (registerTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerInformation other) {
      if (other == null) {
        return;
      }
      if (other.seed_ != null) {
        if (seed_ == null) {
          Seed = new global::AElf.Types.Hash();
        }
        Seed.MergeFrom(other.Seed);
      }
      bouts_.Add(other.bouts_);
      if (other.registerTime_ != null) {
        if (registerTime_ == null) {
          RegisterTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RegisterTime.MergeFrom(other.RegisterTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (seed_ == null) {
              Seed = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Seed);
            break;
          }
          case 18: {
            bouts_.AddEntriesFrom(input, _repeated_bouts_codec);
            break;
          }
          case 26: {
            if (registerTime_ == null) {
              RegisterTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RegisterTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (seed_ == null) {
              Seed = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Seed);
            break;
          }
          case 18: {
            bouts_.AddEntriesFrom(ref input, _repeated_bouts_codec);
            break;
          }
          case 26: {
            if (registerTime_ == null) {
              RegisterTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RegisterTime);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DiceList : pb::IMessage<DiceList>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiceList> _parser = new pb::MessageParser<DiceList>(() => new DiceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiceList(DiceList other) : this() {
      dices_ = other.dices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiceList Clone() {
      return new DiceList(this);
    }

    /// <summary>Field number for the "dices" field.</summary>
    public const int DicesFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_dices_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> dices_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Dices {
      get { return dices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dices_.Equals(other.dices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dices_.WriteTo(output, _repeated_dices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dices_.WriteTo(ref output, _repeated_dices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += dices_.CalculateSize(_repeated_dices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiceList other) {
      if (other == null) {
        return;
      }
      dices_.Add(other.dices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            dices_.AddEntriesFrom(input, _repeated_dices_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            dices_.AddEntriesFrom(ref input, _repeated_dices_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BoutInformation : pb::IMessage<BoutInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BoutInformation> _parser = new pb::MessageParser<BoutInformation>(() => new BoutInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BoutInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BoutInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BoutInformation(BoutInformation other) : this() {
      playBlockHeight_ = other.playBlockHeight_;
      amount_ = other.amount_;
      award_ = other.award_;
      isComplete_ = other.isComplete_;
      playId_ = other.playId_ != null ? other.playId_.Clone() : null;
      bingoBlockHeight_ = other.bingoBlockHeight_;
      type_ = other.type_;
      randomNumber_ = other.randomNumber_;
      roundNumber_ = other.roundNumber_;
      playTime_ = other.playTime_ != null ? other.playTime_.Clone() : null;
      dices_ = other.dices_ != null ? other.dices_.Clone() : null;
      playerAddress_ = other.playerAddress_ != null ? other.playerAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BoutInformation Clone() {
      return new BoutInformation(this);
    }

    /// <summary>Field number for the "play_block_height" field.</summary>
    public const int PlayBlockHeightFieldNumber = 1;
    private long playBlockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PlayBlockHeight {
      get { return playBlockHeight_; }
      set {
        playBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 3;
    private long award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "is_complete" field.</summary>
    public const int IsCompleteFieldNumber = 4;
    private bool isComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsComplete {
      get { return isComplete_; }
      set {
        isComplete_ = value;
      }
    }

    /// <summary>Field number for the "play_id" field.</summary>
    public const int PlayIdFieldNumber = 5;
    private global::AElf.Types.Hash playId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PlayId {
      get { return playId_; }
      set {
        playId_ = value;
      }
    }

    /// <summary>Field number for the "bingo_block_height" field.</summary>
    public const int BingoBlockHeightFieldNumber = 6;
    private long bingoBlockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BingoBlockHeight {
      get { return bingoBlockHeight_; }
      set {
        bingoBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 7;
    private global::Portkey.Contracts.BingoGameContract.BingoType type_ = global::Portkey.Contracts.BingoGameContract.BingoType.Small;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Portkey.Contracts.BingoGameContract.BingoType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "random_number" field.</summary>
    public const int RandomNumberFieldNumber = 8;
    private int randomNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RandomNumber {
      get { return randomNumber_; }
      set {
        randomNumber_ = value;
      }
    }

    /// <summary>Field number for the "round_number" field.</summary>
    public const int RoundNumberFieldNumber = 9;
    private long roundNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RoundNumber {
      get { return roundNumber_; }
      set {
        roundNumber_ = value;
      }
    }

    /// <summary>Field number for the "play_time" field.</summary>
    public const int PlayTimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp playTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp PlayTime {
      get { return playTime_; }
      set {
        playTime_ = value;
      }
    }

    /// <summary>Field number for the "dices" field.</summary>
    public const int DicesFieldNumber = 11;
    private global::Portkey.Contracts.BingoGameContract.DiceList dices_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Portkey.Contracts.BingoGameContract.DiceList Dices {
      get { return dices_; }
      set {
        dices_ = value;
      }
    }

    /// <summary>Field number for the "player_address" field.</summary>
    public const int PlayerAddressFieldNumber = 12;
    private global::AElf.Types.Address playerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address PlayerAddress {
      get { return playerAddress_; }
      set {
        playerAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BoutInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BoutInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayBlockHeight != other.PlayBlockHeight) return false;
      if (Amount != other.Amount) return false;
      if (Award != other.Award) return false;
      if (IsComplete != other.IsComplete) return false;
      if (!object.Equals(PlayId, other.PlayId)) return false;
      if (BingoBlockHeight != other.BingoBlockHeight) return false;
      if (Type != other.Type) return false;
      if (RandomNumber != other.RandomNumber) return false;
      if (RoundNumber != other.RoundNumber) return false;
      if (!object.Equals(PlayTime, other.PlayTime)) return false;
      if (!object.Equals(Dices, other.Dices)) return false;
      if (!object.Equals(PlayerAddress, other.PlayerAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayBlockHeight != 0L) hash ^= PlayBlockHeight.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Award != 0L) hash ^= Award.GetHashCode();
      if (IsComplete != false) hash ^= IsComplete.GetHashCode();
      if (playId_ != null) hash ^= PlayId.GetHashCode();
      if (BingoBlockHeight != 0L) hash ^= BingoBlockHeight.GetHashCode();
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) hash ^= Type.GetHashCode();
      if (RandomNumber != 0) hash ^= RandomNumber.GetHashCode();
      if (RoundNumber != 0L) hash ^= RoundNumber.GetHashCode();
      if (playTime_ != null) hash ^= PlayTime.GetHashCode();
      if (dices_ != null) hash ^= Dices.GetHashCode();
      if (playerAddress_ != null) hash ^= PlayerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayBlockHeight);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Award != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Award);
      }
      if (IsComplete != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsComplete);
      }
      if (playId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayId);
      }
      if (BingoBlockHeight != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BingoBlockHeight);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Type);
      }
      if (RandomNumber != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RandomNumber);
      }
      if (RoundNumber != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RoundNumber);
      }
      if (playTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PlayTime);
      }
      if (dices_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Dices);
      }
      if (playerAddress_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PlayerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayBlockHeight);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Award != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Award);
      }
      if (IsComplete != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsComplete);
      }
      if (playId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayId);
      }
      if (BingoBlockHeight != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BingoBlockHeight);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Type);
      }
      if (RandomNumber != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RandomNumber);
      }
      if (RoundNumber != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(RoundNumber);
      }
      if (playTime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PlayTime);
      }
      if (dices_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Dices);
      }
      if (playerAddress_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(PlayerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayBlockHeight);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Award != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Award);
      }
      if (IsComplete != false) {
        size += 1 + 1;
      }
      if (playId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayId);
      }
      if (BingoBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BingoBlockHeight);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (RandomNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandomNumber);
      }
      if (RoundNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoundNumber);
      }
      if (playTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayTime);
      }
      if (dices_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dices);
      }
      if (playerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BoutInformation other) {
      if (other == null) {
        return;
      }
      if (other.PlayBlockHeight != 0L) {
        PlayBlockHeight = other.PlayBlockHeight;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Award != 0L) {
        Award = other.Award;
      }
      if (other.IsComplete != false) {
        IsComplete = other.IsComplete;
      }
      if (other.playId_ != null) {
        if (playId_ == null) {
          PlayId = new global::AElf.Types.Hash();
        }
        PlayId.MergeFrom(other.PlayId);
      }
      if (other.BingoBlockHeight != 0L) {
        BingoBlockHeight = other.BingoBlockHeight;
      }
      if (other.Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        Type = other.Type;
      }
      if (other.RandomNumber != 0) {
        RandomNumber = other.RandomNumber;
      }
      if (other.RoundNumber != 0L) {
        RoundNumber = other.RoundNumber;
      }
      if (other.playTime_ != null) {
        if (playTime_ == null) {
          PlayTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        PlayTime.MergeFrom(other.PlayTime);
      }
      if (other.dices_ != null) {
        if (dices_ == null) {
          Dices = new global::Portkey.Contracts.BingoGameContract.DiceList();
        }
        Dices.MergeFrom(other.Dices);
      }
      if (other.playerAddress_ != null) {
        if (playerAddress_ == null) {
          PlayerAddress = new global::AElf.Types.Address();
        }
        PlayerAddress.MergeFrom(other.PlayerAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayBlockHeight = input.ReadInt64();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Award = input.ReadInt64();
            break;
          }
          case 32: {
            IsComplete = input.ReadBool();
            break;
          }
          case 42: {
            if (playId_ == null) {
              PlayId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PlayId);
            break;
          }
          case 48: {
            BingoBlockHeight = input.ReadInt64();
            break;
          }
          case 56: {
            Type = (global::Portkey.Contracts.BingoGameContract.BingoType) input.ReadEnum();
            break;
          }
          case 64: {
            RandomNumber = input.ReadInt32();
            break;
          }
          case 72: {
            RoundNumber = input.ReadInt64();
            break;
          }
          case 82: {
            if (playTime_ == null) {
              PlayTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PlayTime);
            break;
          }
          case 90: {
            if (dices_ == null) {
              Dices = new global::Portkey.Contracts.BingoGameContract.DiceList();
            }
            input.ReadMessage(Dices);
            break;
          }
          case 98: {
            if (playerAddress_ == null) {
              PlayerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(PlayerAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayBlockHeight = input.ReadInt64();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Award = input.ReadInt64();
            break;
          }
          case 32: {
            IsComplete = input.ReadBool();
            break;
          }
          case 42: {
            if (playId_ == null) {
              PlayId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PlayId);
            break;
          }
          case 48: {
            BingoBlockHeight = input.ReadInt64();
            break;
          }
          case 56: {
            Type = (global::Portkey.Contracts.BingoGameContract.BingoType) input.ReadEnum();
            break;
          }
          case 64: {
            RandomNumber = input.ReadInt32();
            break;
          }
          case 72: {
            RoundNumber = input.ReadInt64();
            break;
          }
          case 82: {
            if (playTime_ == null) {
              PlayTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(PlayTime);
            break;
          }
          case 90: {
            if (dices_ == null) {
              Dices = new global::Portkey.Contracts.BingoGameContract.DiceList();
            }
            input.ReadMessage(Dices);
            break;
          }
          case 98: {
            if (playerAddress_ == null) {
              PlayerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(PlayerAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LimitSettings : pb::IMessage<LimitSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LimitSettings> _parser = new pb::MessageParser<LimitSettings>(() => new LimitSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LimitSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitSettings(LimitSettings other) : this() {
      minAmount_ = other.minAmount_;
      maxAmount_ = other.maxAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitSettings Clone() {
      return new LimitSettings(this);
    }

    /// <summary>Field number for the "min_amount" field.</summary>
    public const int MinAmountFieldNumber = 1;
    private long minAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MinAmount {
      get { return minAmount_; }
      set {
        minAmount_ = value;
      }
    }

    /// <summary>Field number for the "max_amount" field.</summary>
    public const int MaxAmountFieldNumber = 2;
    private long maxAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MaxAmount {
      get { return maxAmount_; }
      set {
        maxAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LimitSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LimitSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MinAmount != other.MinAmount) return false;
      if (MaxAmount != other.MaxAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MinAmount != 0L) hash ^= MinAmount.GetHashCode();
      if (MaxAmount != 0L) hash ^= MaxAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MinAmount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MinAmount);
      }
      if (MaxAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MinAmount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MinAmount);
      }
      if (MaxAmount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(MaxAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MinAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinAmount);
      }
      if (MaxAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LimitSettings other) {
      if (other == null) {
        return;
      }
      if (other.MinAmount != 0L) {
        MinAmount = other.MinAmount;
      }
      if (other.MaxAmount != 0L) {
        MaxAmount = other.MaxAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MinAmount = input.ReadInt64();
            break;
          }
          case 16: {
            MaxAmount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MinAmount = input.ReadInt64();
            break;
          }
          case 16: {
            MaxAmount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LogEvent
  /// </summary>
  public sealed partial class Played : pb::IMessage<Played>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Played> _parser = new pb::MessageParser<Played>(() => new Played());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Played> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Played() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Played(Played other) : this() {
      playBlockHeight_ = other.playBlockHeight_;
      amount_ = other.amount_;
      type_ = other.type_;
      playId_ = other.playId_ != null ? other.playId_.Clone() : null;
      playerAddress_ = other.playerAddress_ != null ? other.playerAddress_.Clone() : null;
      symbol_ = other.symbol_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Played Clone() {
      return new Played(this);
    }

    /// <summary>Field number for the "play_block_height" field.</summary>
    public const int PlayBlockHeightFieldNumber = 1;
    private long playBlockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PlayBlockHeight {
      get { return playBlockHeight_; }
      set {
        playBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Portkey.Contracts.BingoGameContract.BingoType type_ = global::Portkey.Contracts.BingoGameContract.BingoType.Small;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Portkey.Contracts.BingoGameContract.BingoType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "play_id" field.</summary>
    public const int PlayIdFieldNumber = 4;
    private global::AElf.Types.Hash playId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PlayId {
      get { return playId_; }
      set {
        playId_ = value;
      }
    }

    /// <summary>Field number for the "player_address" field.</summary>
    public const int PlayerAddressFieldNumber = 5;
    private global::AElf.Types.Address playerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address PlayerAddress {
      get { return playerAddress_; }
      set {
        playerAddress_ = value;
      }
    }

    /// <summary>Field number for the "symbol" field.</summary>
    public const int SymbolFieldNumber = 6;
    private string symbol_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Symbol {
      get { return symbol_; }
      set {
        symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Played);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Played other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayBlockHeight != other.PlayBlockHeight) return false;
      if (Amount != other.Amount) return false;
      if (Type != other.Type) return false;
      if (!object.Equals(PlayId, other.PlayId)) return false;
      if (!object.Equals(PlayerAddress, other.PlayerAddress)) return false;
      if (Symbol != other.Symbol) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayBlockHeight != 0L) hash ^= PlayBlockHeight.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) hash ^= Type.GetHashCode();
      if (playId_ != null) hash ^= PlayId.GetHashCode();
      if (playerAddress_ != null) hash ^= PlayerAddress.GetHashCode();
      if (Symbol.Length != 0) hash ^= Symbol.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayBlockHeight);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (playId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayId);
      }
      if (playerAddress_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerAddress);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Symbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayBlockHeight);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (playId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayId);
      }
      if (playerAddress_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerAddress);
      }
      if (Symbol.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Symbol);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayBlockHeight);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (playId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayId);
      }
      if (playerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAddress);
      }
      if (Symbol.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Played other) {
      if (other == null) {
        return;
      }
      if (other.PlayBlockHeight != 0L) {
        PlayBlockHeight = other.PlayBlockHeight;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        Type = other.Type;
      }
      if (other.playId_ != null) {
        if (playId_ == null) {
          PlayId = new global::AElf.Types.Hash();
        }
        PlayId.MergeFrom(other.PlayId);
      }
      if (other.playerAddress_ != null) {
        if (playerAddress_ == null) {
          PlayerAddress = new global::AElf.Types.Address();
        }
        PlayerAddress.MergeFrom(other.PlayerAddress);
      }
      if (other.Symbol.Length != 0) {
        Symbol = other.Symbol;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayBlockHeight = input.ReadInt64();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Type = (global::Portkey.Contracts.BingoGameContract.BingoType) input.ReadEnum();
            break;
          }
          case 34: {
            if (playId_ == null) {
              PlayId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PlayId);
            break;
          }
          case 42: {
            if (playerAddress_ == null) {
              PlayerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(PlayerAddress);
            break;
          }
          case 50: {
            Symbol = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayBlockHeight = input.ReadInt64();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Type = (global::Portkey.Contracts.BingoGameContract.BingoType) input.ReadEnum();
            break;
          }
          case 34: {
            if (playId_ == null) {
              PlayId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PlayId);
            break;
          }
          case 42: {
            if (playerAddress_ == null) {
              PlayerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(PlayerAddress);
            break;
          }
          case 50: {
            Symbol = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Bingoed : pb::IMessage<Bingoed>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Bingoed> _parser = new pb::MessageParser<Bingoed>(() => new Bingoed());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Bingoed> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Bingoed() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Bingoed(Bingoed other) : this() {
      playBlockHeight_ = other.playBlockHeight_;
      amount_ = other.amount_;
      award_ = other.award_;
      isComplete_ = other.isComplete_;
      playId_ = other.playId_ != null ? other.playId_.Clone() : null;
      bingoBlockHeight_ = other.bingoBlockHeight_;
      type_ = other.type_;
      randomNumber_ = other.randomNumber_;
      dices_ = other.dices_ != null ? other.dices_.Clone() : null;
      playerAddress_ = other.playerAddress_ != null ? other.playerAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Bingoed Clone() {
      return new Bingoed(this);
    }

    /// <summary>Field number for the "play_block_height" field.</summary>
    public const int PlayBlockHeightFieldNumber = 1;
    private long playBlockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PlayBlockHeight {
      get { return playBlockHeight_; }
      set {
        playBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "award" field.</summary>
    public const int AwardFieldNumber = 3;
    private long award_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Award {
      get { return award_; }
      set {
        award_ = value;
      }
    }

    /// <summary>Field number for the "is_complete" field.</summary>
    public const int IsCompleteFieldNumber = 4;
    private bool isComplete_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsComplete {
      get { return isComplete_; }
      set {
        isComplete_ = value;
      }
    }

    /// <summary>Field number for the "play_id" field.</summary>
    public const int PlayIdFieldNumber = 5;
    private global::AElf.Types.Hash playId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash PlayId {
      get { return playId_; }
      set {
        playId_ = value;
      }
    }

    /// <summary>Field number for the "bingo_block_height" field.</summary>
    public const int BingoBlockHeightFieldNumber = 6;
    private long bingoBlockHeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BingoBlockHeight {
      get { return bingoBlockHeight_; }
      set {
        bingoBlockHeight_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 7;
    private global::Portkey.Contracts.BingoGameContract.BingoType type_ = global::Portkey.Contracts.BingoGameContract.BingoType.Small;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Portkey.Contracts.BingoGameContract.BingoType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "random_number" field.</summary>
    public const int RandomNumberFieldNumber = 8;
    private int randomNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int RandomNumber {
      get { return randomNumber_; }
      set {
        randomNumber_ = value;
      }
    }

    /// <summary>Field number for the "dices" field.</summary>
    public const int DicesFieldNumber = 9;
    private global::Portkey.Contracts.BingoGameContract.DiceList dices_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Portkey.Contracts.BingoGameContract.DiceList Dices {
      get { return dices_; }
      set {
        dices_ = value;
      }
    }

    /// <summary>Field number for the "player_address" field.</summary>
    public const int PlayerAddressFieldNumber = 10;
    private global::AElf.Types.Address playerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address PlayerAddress {
      get { return playerAddress_; }
      set {
        playerAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Bingoed);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Bingoed other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayBlockHeight != other.PlayBlockHeight) return false;
      if (Amount != other.Amount) return false;
      if (Award != other.Award) return false;
      if (IsComplete != other.IsComplete) return false;
      if (!object.Equals(PlayId, other.PlayId)) return false;
      if (BingoBlockHeight != other.BingoBlockHeight) return false;
      if (Type != other.Type) return false;
      if (RandomNumber != other.RandomNumber) return false;
      if (!object.Equals(Dices, other.Dices)) return false;
      if (!object.Equals(PlayerAddress, other.PlayerAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayBlockHeight != 0L) hash ^= PlayBlockHeight.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Award != 0L) hash ^= Award.GetHashCode();
      if (IsComplete != false) hash ^= IsComplete.GetHashCode();
      if (playId_ != null) hash ^= PlayId.GetHashCode();
      if (BingoBlockHeight != 0L) hash ^= BingoBlockHeight.GetHashCode();
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) hash ^= Type.GetHashCode();
      if (RandomNumber != 0) hash ^= RandomNumber.GetHashCode();
      if (dices_ != null) hash ^= Dices.GetHashCode();
      if (playerAddress_ != null) hash ^= PlayerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayBlockHeight);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Award != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Award);
      }
      if (IsComplete != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsComplete);
      }
      if (playId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayId);
      }
      if (BingoBlockHeight != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BingoBlockHeight);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Type);
      }
      if (RandomNumber != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RandomNumber);
      }
      if (dices_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Dices);
      }
      if (playerAddress_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PlayerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayBlockHeight != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayBlockHeight);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Award != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Award);
      }
      if (IsComplete != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsComplete);
      }
      if (playId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayId);
      }
      if (BingoBlockHeight != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BingoBlockHeight);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Type);
      }
      if (RandomNumber != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(RandomNumber);
      }
      if (dices_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Dices);
      }
      if (playerAddress_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PlayerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PlayBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayBlockHeight);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Award != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Award);
      }
      if (IsComplete != false) {
        size += 1 + 1;
      }
      if (playId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayId);
      }
      if (BingoBlockHeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BingoBlockHeight);
      }
      if (Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (RandomNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RandomNumber);
      }
      if (dices_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dices);
      }
      if (playerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Bingoed other) {
      if (other == null) {
        return;
      }
      if (other.PlayBlockHeight != 0L) {
        PlayBlockHeight = other.PlayBlockHeight;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Award != 0L) {
        Award = other.Award;
      }
      if (other.IsComplete != false) {
        IsComplete = other.IsComplete;
      }
      if (other.playId_ != null) {
        if (playId_ == null) {
          PlayId = new global::AElf.Types.Hash();
        }
        PlayId.MergeFrom(other.PlayId);
      }
      if (other.BingoBlockHeight != 0L) {
        BingoBlockHeight = other.BingoBlockHeight;
      }
      if (other.Type != global::Portkey.Contracts.BingoGameContract.BingoType.Small) {
        Type = other.Type;
      }
      if (other.RandomNumber != 0) {
        RandomNumber = other.RandomNumber;
      }
      if (other.dices_ != null) {
        if (dices_ == null) {
          Dices = new global::Portkey.Contracts.BingoGameContract.DiceList();
        }
        Dices.MergeFrom(other.Dices);
      }
      if (other.playerAddress_ != null) {
        if (playerAddress_ == null) {
          PlayerAddress = new global::AElf.Types.Address();
        }
        PlayerAddress.MergeFrom(other.PlayerAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayBlockHeight = input.ReadInt64();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Award = input.ReadInt64();
            break;
          }
          case 32: {
            IsComplete = input.ReadBool();
            break;
          }
          case 42: {
            if (playId_ == null) {
              PlayId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PlayId);
            break;
          }
          case 48: {
            BingoBlockHeight = input.ReadInt64();
            break;
          }
          case 56: {
            Type = (global::Portkey.Contracts.BingoGameContract.BingoType) input.ReadEnum();
            break;
          }
          case 64: {
            RandomNumber = input.ReadInt32();
            break;
          }
          case 74: {
            if (dices_ == null) {
              Dices = new global::Portkey.Contracts.BingoGameContract.DiceList();
            }
            input.ReadMessage(Dices);
            break;
          }
          case 82: {
            if (playerAddress_ == null) {
              PlayerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(PlayerAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayBlockHeight = input.ReadInt64();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 24: {
            Award = input.ReadInt64();
            break;
          }
          case 32: {
            IsComplete = input.ReadBool();
            break;
          }
          case 42: {
            if (playId_ == null) {
              PlayId = new global::AElf.Types.Hash();
            }
            input.ReadMessage(PlayId);
            break;
          }
          case 48: {
            BingoBlockHeight = input.ReadInt64();
            break;
          }
          case 56: {
            Type = (global::Portkey.Contracts.BingoGameContract.BingoType) input.ReadEnum();
            break;
          }
          case 64: {
            RandomNumber = input.ReadInt32();
            break;
          }
          case 74: {
            if (dices_ == null) {
              Dices = new global::Portkey.Contracts.BingoGameContract.DiceList();
            }
            input.ReadMessage(Dices);
            break;
          }
          case 82: {
            if (playerAddress_ == null) {
              PlayerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(PlayerAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Registered : pb::IMessage<Registered>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Registered> _parser = new pb::MessageParser<Registered>(() => new Registered());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Registered> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Portkey.Contracts.BingoGameContract.BingoGameContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Registered() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Registered(Registered other) : this() {
      seed_ = other.seed_ != null ? other.seed_.Clone() : null;
      registerTime_ = other.registerTime_ != null ? other.registerTime_.Clone() : null;
      playerAddress_ = other.playerAddress_ != null ? other.playerAddress_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Registered Clone() {
      return new Registered(this);
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 1;
    private global::AElf.Types.Hash seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Hash Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    /// <summary>Field number for the "register_time" field.</summary>
    public const int RegisterTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp registerTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RegisterTime {
      get { return registerTime_; }
      set {
        registerTime_ = value;
      }
    }

    /// <summary>Field number for the "player_address" field.</summary>
    public const int PlayerAddressFieldNumber = 3;
    private global::AElf.Types.Address playerAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::AElf.Types.Address PlayerAddress {
      get { return playerAddress_; }
      set {
        playerAddress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Registered);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Registered other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Seed, other.Seed)) return false;
      if (!object.Equals(RegisterTime, other.RegisterTime)) return false;
      if (!object.Equals(PlayerAddress, other.PlayerAddress)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (seed_ != null) hash ^= Seed.GetHashCode();
      if (registerTime_ != null) hash ^= RegisterTime.GetHashCode();
      if (playerAddress_ != null) hash ^= PlayerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (seed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Seed);
      }
      if (registerTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegisterTime);
      }
      if (playerAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (seed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Seed);
      }
      if (registerTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegisterTime);
      }
      if (playerAddress_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PlayerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (seed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Seed);
      }
      if (registerTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegisterTime);
      }
      if (playerAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Registered other) {
      if (other == null) {
        return;
      }
      if (other.seed_ != null) {
        if (seed_ == null) {
          Seed = new global::AElf.Types.Hash();
        }
        Seed.MergeFrom(other.Seed);
      }
      if (other.registerTime_ != null) {
        if (registerTime_ == null) {
          RegisterTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RegisterTime.MergeFrom(other.RegisterTime);
      }
      if (other.playerAddress_ != null) {
        if (playerAddress_ == null) {
          PlayerAddress = new global::AElf.Types.Address();
        }
        PlayerAddress.MergeFrom(other.PlayerAddress);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (seed_ == null) {
              Seed = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Seed);
            break;
          }
          case 18: {
            if (registerTime_ == null) {
              RegisterTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RegisterTime);
            break;
          }
          case 26: {
            if (playerAddress_ == null) {
              PlayerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(PlayerAddress);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (seed_ == null) {
              Seed = new global::AElf.Types.Hash();
            }
            input.ReadMessage(Seed);
            break;
          }
          case 18: {
            if (registerTime_ == null) {
              RegisterTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RegisterTime);
            break;
          }
          case 26: {
            if (playerAddress_ == null) {
              PlayerAddress = new global::AElf.Types.Address();
            }
            input.ReadMessage(PlayerAddress);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
